[tool]
[tool.poetry]
name = "zillionare_core_types"
version = "0.6"
homepage = "https://github.com/zillionare/zillionare_core_types"
description = "core types definition shared by zillionare."
authors = ["Aaron Yang <code@jieyu.ai>"]
readme = "README.md"
license =  "MIT"
classifiers=[
    'Development Status :: 2 - Pre-Alpha',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: MIT License',
    'Natural Language :: English',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
]
packages = [
    { include = "coretypes" },
    { include = "tests", format = "sdist" },
]

[tool.poetry.dependencies]
python = ">=3.8,<4.0"

black = {version = "^22.3.0", optional = true}
isort  = { version = "5.6.4", optional = true}
flake8  = { version = "3.8.4", optional = true}
flake8-docstrings = { version = "^1.6.0", optional = true }
pytest  = { version = "6.1.2", optional = true}
pytest-cov  = { version = "2.10.1", optional = true}
tox  = { version = "^3.20.1", optional = true}
virtualenv  = { version = "^20.2.2", optional = true}
pip  = { version = "^22.2", optional = true}
mkdocs = {version = "^1.3.0", optional = true}
mkdocs-include-markdown-plugin = {version = "^3.2.3", optional = true}
mkdocs-material = {version = "^8.1.11", optional = true}
mkdocs-material-extensions = {version = "^1.0.3", optional = true}
twine  = { version = "^3.3.0", optional = true}
pre-commit = {version = "^2.12.0", optional = true}
toml = {version = "^0.10.2", optional = true}
numpy = "^1.20"
deprecation = "^2.1.0"
livereload = {version = "^2.6.3", optional = true}
mkdocstrings = {version = "^0.18.0", optional = true}
mkdocs-autorefs = {version = "^0.4.1", optional = true}
mike = {version = "^1.1.2", optional = true}

[tool.poetry.extras]
test = [
    "pytest",
    "black",
    "isort",
    "flake8",
    "flake8-docstrings",
    "pytest-cov"
    ]

dev = ["tox", "pre-commit", "virtualenv", "pip", "twine", "toml", "black"]

doc = [
    "mkdocs",
    "mkdocs-include-markdown-plugin",
    "mkdocs-material",
    "mkdocstrings",
    "mkdocs-material-extension",
    "mkdocs-autorefs",
    "livereload",
    "mike"
    ]



[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''
